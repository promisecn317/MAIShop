{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import {getEmailCode, register} from '../api/register';\nexport default {\n  name: 'Register',\n  data: function data() {\n    return {\n      statusMsg: '',\n      error: '',\n      isDisable: false,\n      codeLoading: false,\n      passwordType: 'password',\n      redirect: undefined,\n      ruleForm: {\n        email: '',\n        code: '',\n        password: ''\n      },\n      rules: {\n        email: [{\n          required: true,\n          type: 'email',\n          message: 'Input Email box',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/,\n          message: 'Please use XITLU campus email'\n        }],\n        code: [{\n          required: true,\n          type: 'string',\n          message: 'Input verification code',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\d{6}$/,\n          message: 'Must be a 6-digit integer'\n        }],\n        password: [{\n          required: true,\n          message: 'Input password',\n          trigger: 'blur'\n        }, {\n          pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/,\n          message: 'Please contain both numbers and letters and be 6-16 characters in length'\n        }]\n      }\n    };\n  },\n  methods: {\n    goTo: function goTo() {\n      this.$router.push('/login');\n    },\n    sendMsg: function sendMsg() {\n      var _this = this;\n\n      var self = this;\n      var email = '';\n      email = this.ruleForm.email;\n      var emailPass;\n      var timerid;\n      console.log(timerid);\n\n      if (timerid) {\n        return false;\n      }\n\n      self.statusMsg = '';\n      this.$refs['ruleForm'].validateField('email', function (valid) {\n        emailPass = valid;\n      }); // 向后端API验证码发送\n\n      if (!emailPass) {\n        self.codeLoading = true;\n        self.statusMsg = '验证码发送中...'; //修改post的api接口路径\n        // this.$https.post('http://localhost:8080/api/getVerifyEmail',{email:self.ruleForm.email}).then(res=>{\n        // Json字符串形式请求\n\n        this.$https.post(\"/api/verifyemail?email=+ \".concat(email), {\n          email: this.ruleForm.email\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this.$message({\n              showClose: true,\n              message: 'Verification code sent successfully!',\n              type: 'success'\n            });\n\n            var count = 60;\n            self.ruleForm.code = '';\n            self.codeLoading = false;\n            self.isDisable = true;\n            self.statusMsg = \"\\u9A8C\\u8BC1\\u7801\\u5DF2\\u53D1\\u9001,\".concat(count--, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\"); //使用延迟函数，显示剩余秒数\n\n            timerid = window.setInterval(function () {\n              self.statusMsg = \"\\u9A8C\\u8BC1\\u7801\\u5DF2\\u53D1\\u9001,\".concat(count--, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\");\n\n              if (count <= 0) {\n                console.log('clear' + timerid);\n                window.clearInterval(timerid);\n                self.isDisable = false;\n                self.statusMsg = '';\n              }\n            }, 1000);\n          } else {\n            _this.$message({\n              showClose: true,\n              message: 'Already registered, log in!',\n              type: 'error'\n            });\n          }\n        }).catch(function (err) {\n          _this.isDisable = false;\n          _this.statusMsg = '';\n          _this.codeLoading = false;\n          console.log(err);\n        });\n      }\n    },\n    // 用户注册\n    register: function register() {\n      var _this2 = this;\n\n      var code = '';\n      code = this.ruleForm.code;\n      var user = {\n        email: this.ruleForm.email,\n        code: this.ruleForm.code,\n        password: this.ruleForm.password\n      };\n      this.$https.post(\"/api/reg/person?code=+ \".concat(code), user).then(function (res) {\n        if (res.status === 200) {\n          _this2.$message({\n            showClose: true,\n            message: 'Registration succeeded, skipping to login page...',\n            type: 'success'\n          });\n\n          setTimeout(function () {\n            _this2.$router.push('/login');\n          }, 2000);\n        } else {\n          _this2.$message({\n            showClose: true,\n            message: 'Registration failed. Please try again.',\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AAGA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,eAFA;AAGAC,sBAHA;AAIAC,wBAJA;AAKAC,8BALA;AAMAC,yBANA;AAOAC;AACAC,iBADA;AAEAC,gBAFA;AAGAC;AAHA,OAPA;AAYAC;AACAH;AACAI,wBADA;AAEAC,uBAFA;AAGAC,oCAHA;AAIAC;AAJA,WAKA;AAAAC;AAAAF;AAAA,SALA,CADA;AAOAL;AACAG,wBADA;AAEAC,wBAFA;AAGAC,4CAHA;AAIAC;AAJA,WAKA;AAAAC;AAAAF;AAAA,SALA,CAPA;AAaAJ;AACAE,wBADA;AAEAE,mCAFA;AAGAC;AAHA,WAIA;AAAAC;AAAAF;AAAA,SAJA;AAbA;AAZA;AAgCA,GAnCA;AAqCAG;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAIAC,WAJA,qBAIA;AAAA;;AACA;AACA;AACAX;AACA;AACA;AACAY;;AACA;AACA;AACA;;AACAC;AACA;AACAC;AACA,OAFA,EAXA,CAcA;;AACA;AACAD;AACAA,qCAFA,CAGA;AACA;AACA;;AACA;AAAAb;AAAA;AACA;AACA;AACAe,6BADA;AAEAT,6DAFA;AAGAD;AAHA;;AAKA;AACAQ;AACAA;AACAA;AACAA,6HAVA,CAWA;;AACAG;AACAH;;AACA;AACAD;AACAK;AACAJ;AACAA;AACA;AACA,aARA,EAQA,IARA;AASA,WArBA,MAqBA;AACA;AACAE,6BADA;AAEAT,oDAFA;AAGAD;AAHA;AAKA;AACA,SA7BA,EA6BAa,KA7BA,CA6BA;AACA;AACA;AACA;AACAN;AACA,SAlCA;AAmCA;AACA,KA7DA;AAgEA;AACAO,YAjEA,sBAiEA;AAAA;;AACA;AACAlB;AACA;AACAD,kCADA;AAEAC,gCAFA;AAGAC;AAHA;AAKA;AACA;AACA;AACAa,2BADA;AAEAT,wEAFA;AAGAD;AAHA;;AAKAe;AACA;AACA,WAFA,EAEA,IAFA;AAGA,SATA,MASA;AACA;AACAL,2BADA;AAEAT,6DAFA;AAGAD;AAHA;AAKA;AACA,OAjBA;AAkBA;AA3FA;AArCA","names":["name","data","statusMsg","error","isDisable","codeLoading","passwordType","redirect","ruleForm","email","code","password","rules","required","type","message","trigger","pattern","methods","goTo","sendMsg","console","self","emailPass","showClose","timerid","window","catch","register","setTimeout"],"sourceRoot":"src/views","sources":["register.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"register-container\">\r\n\r\n    <section>\r\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" label-width=\"100px\" class=\"ms-content\" autocomplete=\"off\"\r\n               :hide-required-asterisk=\"true\" size=\"medium\">\r\n        <div class=\"ms-register\">\r\n          <h3 class=\"ms-title\">REGISTATION</h3>\r\n        </div>\r\n        <div style=\"padding-top: 10px\">\r\n          <el-form-item prop=\"email\">\r\n            <el-col :span=\"10\">\r\n              <el-input ref=\"email\" v-model=\"ruleForm.email\" placeholder=\"输入邮箱并点击获取验证码\" name=\"username\" type=\"text\"\r\n                        tabindex=\"1\" auto-complete=\"on\">\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-user-solid\"></i></el-input>\r\n            </el-col>\r\n            <el-button :loading=\"codeLoading\" :disabled=\"isDisable\" type=\"info\" size=\"mini\"\r\n                       style=\"background-color: #25c4b0\" @click=\"sendMsg()\">Get Code\r\n            </el-button>\r\n\r\n            <span class=\"status\">{{ statusMsg }}</span>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"code\">\r\n            <el-col :span=\"10\">\r\n              <el-input v-model=\"ruleForm.code\" maxlength=\"6\" placeholder=\"请登录邮箱接收验证码\"/>\r\n            </el-col>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"pwd\">\r\n            <el-col :span=\"10\">\r\n              <el-input :key=\"passwordType\" ref=\"password\" v-model=\"ruleForm.password\" :type=\"passwordType\"\r\n                        placeholder=\"请输入密码\" name=\"password\"\r\n                        tabindex=\"2\" auto-complete=\"on\">\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\r\n              </el-input>\r\n            </el-col>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button type=\"primary\" style=\"width: 42%; background-color: #25c4b0\" @click=\"register()\">Registration\r\n            </el-button>\r\n          </el-form-item>\r\n        </div>\r\n\r\n        <p class=\"tips\">Have account?\r\n          <el-button type=\"info\" size=\"mini\" style=\"background-color: #25c4b0\" @click=\"goTo()\">Log in</el-button>\r\n        </p>\r\n      </el-form>\r\n    </section>\r\n\r\n    <div class=\"error\">{{ error }}</div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n// import {getEmailCode, register} from '../api/register';\r\n\r\n\r\nexport default {\r\n  name: 'Register',\r\n  data() {\r\n    return {\r\n      statusMsg: '',\r\n      error: '',\r\n      isDisable: false,\r\n      codeLoading: false,\r\n      passwordType: 'password',\r\n      redirect: undefined,\r\n      ruleForm: {\r\n        email: '',\r\n        code: '',\r\n        password: '',\r\n      },\r\n      rules: {\r\n        email: [{\r\n          required: true,\r\n          type: 'email',\r\n          message: 'Input Email box',\r\n          trigger: 'blur'\r\n        }, {pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/, message: 'Please use XITLU campus email'}],\r\n        code: [{\r\n          required: true,\r\n          type: 'string',\r\n          message: 'Input verification code',\r\n          trigger: 'blur'\r\n        }, {pattern: /^\\d{6}$/, message: 'Must be a 6-digit integer'}],\r\n        password: [{\r\n          required: true,\r\n          message: 'Input password',\r\n          trigger: 'blur'\r\n        }, {pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/, message: 'Please contain both numbers and letters and be 6-16 characters in length'},]\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    goTo() {\r\n      this.$router.push('/login');\r\n    },\r\n    sendMsg() {\r\n      const self = this\r\n      let email=''\r\n      email=this.ruleForm.email\r\n      let emailPass\r\n      let timerid\r\n      console.log(timerid)\r\n      if (timerid) {\r\n        return false\r\n      }\r\n      self.statusMsg = ''\r\n      this.$refs['ruleForm'].validateField('email', (valid) => {\r\n        emailPass = valid\r\n      })\r\n      // 向后端API验证码发送\r\n      if (!emailPass) {\r\n        self.codeLoading = true\r\n        self.statusMsg = '验证码发送中...'\r\n        //修改post的api接口路径\r\n        // this.$https.post('http://localhost:8080/api/getVerifyEmail',{email:self.ruleForm.email}).then(res=>{\r\n        // Json字符串形式请求\r\n        this.$https.post(`/api/verifyemail?email=+ ${email}`, {email: this.ruleForm.email}).then(res => {\r\n          if (res.status === 200) {\r\n            this.$message({\r\n              showClose: true,\r\n              message: 'Verification code sent successfully!',\r\n              type: 'success'\r\n            })\r\n            let count = 60\r\n            self.ruleForm.code = ''\r\n            self.codeLoading = false\r\n            self.isDisable = true\r\n            self.statusMsg = `验证码已发送,${count--}秒后重新发送`\r\n            //使用延迟函数，显示剩余秒数\r\n            timerid = window.setInterval(function () {\r\n              self.statusMsg = `验证码已发送,${count--}秒后重新发送`\r\n              if (count <= 0) {\r\n                console.log('clear' + timerid)\r\n                window.clearInterval(timerid)\r\n                self.isDisable = false\r\n                self.statusMsg = ''\r\n              }\r\n            }, 1000)\r\n          } else {\r\n            this.$message({\r\n              showClose: true,\r\n              message: 'Already registered, log in!',\r\n              type: 'error'\r\n            })\r\n          }\r\n        }).catch(err => {\r\n          this.isDisable = false\r\n          this.statusMsg = ''\r\n          this.codeLoading = false\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n\r\n\r\n    // 用户注册\r\n    register() {\r\n      let code = ''\r\n      code = this.ruleForm.code\r\n      const user = {\r\n        email: this.ruleForm.email,\r\n        code: this.ruleForm.code,\r\n        password: this.ruleForm.password\r\n      }\r\n      this.$https.post(`/api/reg/person?code=+ ${code}`, user).then(res => {\r\n        if (res.status === 200) {\r\n          this.$message({\r\n            showClose: true,\r\n            message: 'Registration succeeded, skipping to login page...',\r\n            type: 'success'\r\n          })\r\n          setTimeout(() => {\r\n            this.$router.push('/login')\r\n          }, 2000)\r\n        } else {\r\n          this.$message({\r\n            showClose: true,\r\n            message: 'Registration failed. Please try again.',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.register-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 110vh;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-image: url(\"~@/assets/new.jpg\")\r\n}\r\n\r\n.ms-register {\r\n  line-height: 30px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  color: #fff;\r\n  border-bottom: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 5px 15px 15px 5px;\r\n}\r\n\r\n.ms-content {\r\n  background: rgba(255, 255, 255, 0.3);\r\n  padding: 10px 10px;\r\n  position: absolute;\r\n  left: 320px;\r\n  top: 150px;\r\n  width: 650px;\r\n  height: 400px;\r\n}\r\n\r\n.tips {\r\n  float: right;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  left: -250px;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}