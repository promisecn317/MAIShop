{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import {getEmailCode, register} from '../api/register';\nexport default {\n  name: 'Register',\n  data: function data() {\n    return {\n      statusMsg: '',\n      error: '',\n      isDisable: false,\n      codeLoading: false,\n      passwordType: 'password',\n      redirect: undefined,\n      ruleForm: {\n        email: '',\n        code: '',\n        password: ''\n      },\n      rules: {\n        email: [{\n          required: true,\n          type: 'email',\n          message: 'Input Email box',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/,\n          message: 'Please use XITLU campus email'\n        }],\n        code: [{\n          required: true,\n          type: 'string',\n          message: 'Input verification code',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\d{6}$/,\n          message: 'Must be a 6-digit integer'\n        }],\n        password: [{\n          required: true,\n          message: 'Input password',\n          trigger: 'blur'\n        }, {\n          pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/,\n          message: 'Please contain both numbers and letters and be 6-16 characters in length'\n        }]\n      }\n    };\n  },\n  methods: {\n    goTo: function goTo() {\n      this.$router.push('/login');\n    },\n    sendMsg: function sendMsg() {\n      var _this = this;\n\n      var self = this;\n      var email = '';\n      email = this.ruleForm.email;\n      var emailPass;\n      var timerid;\n      console.log(timerid);\n\n      if (timerid) {\n        return false;\n      }\n\n      self.statusMsg = '';\n      this.$refs['ruleForm'].validateField('email', function (valid) {\n        emailPass = valid;\n      }); // 向后端API验证码发送\n\n      if (!emailPass) {\n        self.codeLoading = true;\n        self.statusMsg = '验证码发送中...'; //修改post的api接口路径\n        // this.$https.post('http://localhost:8080/api/getVerifyEmail',{email:self.ruleForm.email}).then(res=>{\n        // Json字符串形式请求\n\n        this.$https.post('/user/verify_email', {\n          email: this.ruleForm.email\n        }).then(function (res) {\n          if (res.status === 200) {\n            _this.$message({\n              showClose: true,\n              message: 'Verification code sent successfully!',\n              type: 'success'\n            });\n\n            var count = 60;\n            self.ruleForm.code = '';\n            self.codeLoading = false;\n            self.isDisable = true;\n            self.statusMsg = \"\\u9A8C\\u8BC1\\u7801\\u5DF2\\u53D1\\u9001,\".concat(count--, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\"); //使用延迟函数，显示剩余秒数\n\n            timerid = window.setInterval(function () {\n              self.statusMsg = \"\\u9A8C\\u8BC1\\u7801\\u5DF2\\u53D1\\u9001,\".concat(count--, \"\\u79D2\\u540E\\u91CD\\u65B0\\u53D1\\u9001\");\n\n              if (count <= 0) {\n                console.log('clear' + timerid);\n                window.clearInterval(timerid);\n                self.isDisable = false;\n                self.statusMsg = '';\n              }\n            }, 1000);\n          } else if (res.status === 409) {\n            _this.$message({\n              showClose: true,\n              message: 'Already registered, log in!',\n              type: 'error'\n            });\n          }\n        }).catch(function (err) {\n          _this.isDisable = false;\n          _this.statusMsg = '';\n          _this.codeLoading = false;\n          console.log(err);\n        });\n      }\n    },\n    // 用户注册\n    register: function register() {\n      var _this2 = this;\n\n      var code = '';\n      code = this.ruleForm.code;\n      var user = {\n        email: this.ruleForm.email,\n        // code: this.ruleForm.code,\n        password: this.ruleForm.password\n      };\n      this.$https.post(\"/user/userRegister/\".concat(code), user).then(function (res) {\n        if (res.status === 200) {\n          _this2.$message({\n            showClose: true,\n            message: 'Registration succeeded, skipping to login page...',\n            type: 'success'\n          });\n\n          setTimeout(function () {\n            _this2.$router.push('/login');\n          }, 2000);\n        } else if (res.status === 400) {\n          _this2.$message({\n            showClose: true,\n            message: 'Failed. Please try again.',\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AAGA;AACAA,kBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,eAFA;AAGAC,sBAHA;AAIAC,wBAJA;AAKAC,8BALA;AAMAC,yBANA;AAOAC;AACAC,iBADA;AAEAC,gBAFA;AAGAC;AAHA,OAPA;AAYAC;AACAH;AACAI,wBADA;AAEAC,uBAFA;AAGAC,oCAHA;AAIAC;AAJA,WAKA;AAAAC;AAAAF;AAAA,SALA,CADA;AAOAL;AACAG,wBADA;AAEAC,wBAFA;AAGAC,4CAHA;AAIAC;AAJA,WAKA;AAAAC;AAAAF;AAAA,SALA,CAPA;AAaAJ;AACAE,wBADA;AAEAE,mCAFA;AAGAC;AAHA,WAIA;AAAAC;AAAAF;AAAA,SAJA;AAbA;AAZA;AAgCA,GAnCA;AAqCAG;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAIAC,WAJA,qBAIA;AAAA;;AACA;AACA;AACAX;AACA;AACA;AACAY;;AACA;AACA;AACA;;AACAC;AACA;AACAC;AACA,OAFA,EAXA,CAcA;;AACA;AACAD;AACAA,qCAFA,CAGA;AACA;AACA;;AACA;AAAAb;AAAA;AACA;AACA;AACAe,6BADA;AAEAT,6DAFA;AAGAD;AAHA;;AAKA;AACAQ;AACAA;AACAA;AACAA,6HAVA,CAWA;;AACAG;AACAH;;AACA;AACAD;AACAK;AACAJ;AACAA;AACA;AACA,aARA,EAQA,IARA;AASA,WArBA,MAqBA;AACA;AACAE,6BADA;AAEAT,oDAFA;AAGAD;AAHA;AAKA;AACA,SA7BA,EA6BAa,KA7BA,CA6BA;AACA;AACA;AACA;AACAN;AACA,SAlCA;AAmCA;AACA,KA7DA;AAgEA;AACAO,YAjEA,sBAiEA;AAAA;;AACA;AACAlB;AACA;AACAD,kCADA;AAEA;AACAE;AAHA;AAKA;AACA;AACA;AACAa,2BADA;AAEAT,wEAFA;AAGAD;AAHA;;AAKAe;AACA;AACA,WAFA,EAEA,IAFA;AAGA,SATA,MASA;AACA;AACAL,2BADA;AAEAT,gDAFA;AAGAD;AAHA;AAKA;AACA,OAjBA;AAkBA;AA3FA;AArCA","names":["name","data","statusMsg","error","isDisable","codeLoading","passwordType","redirect","ruleForm","email","code","password","rules","required","type","message","trigger","pattern","methods","goTo","sendMsg","console","self","emailPass","showClose","timerid","window","catch","register","setTimeout"],"sourceRoot":"src/views","sources":["register.vue"],"sourcesContent":["<template>\n\n  <div class=\"register-container\">\n\n    <section>\n      <el-form ref=\"ruleForm\" :model=\"ruleForm\" :rules=\"rules\" label-width=\"100px\" class=\"ms-content\" autocomplete=\"off\"\n               :hide-required-asterisk=\"true\" size=\"medium\">\n        <div class=\"ms-register\">\n          <h3 class=\"ms-title\">REGISTATION</h3>\n        </div>\n        <div style=\"padding-top: 10px\">\n          <el-form-item prop=\"email\">\n            <el-col :span=\"10\">\n              <el-input ref=\"email\" v-model=\"ruleForm.email\" placeholder=\"输入邮箱并点击获取验证码\" name=\"username\" type=\"text\"\n                        tabindex=\"1\" auto-complete=\"on\">\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-user-solid\"></i></el-input>\n            </el-col>\n            <el-button :loading=\"codeLoading\" :disabled=\"isDisable\" type=\"info\" size=\"mini\"\n                       style=\"background-color: #25c4b0\" @click=\"sendMsg()\">Get Code\n            </el-button>\n\n            <span class=\"status\">{{ statusMsg }}</span>\n          </el-form-item>\n\n          <el-form-item prop=\"code\">\n            <el-col :span=\"10\">\n              <el-input v-model=\"ruleForm.code\" maxlength=\"6\" placeholder=\"请登录邮箱接收验证码\"/>\n            </el-col>\n          </el-form-item>\n\n          <el-form-item prop=\"pwd\">\n            <el-col :span=\"10\">\n              <el-input :key=\"passwordType\" ref=\"password\" v-model=\"ruleForm.password\" :type=\"passwordType\"\n                        placeholder=\"请输入密码\" name=\"password\"\n                        tabindex=\"2\" auto-complete=\"on\">\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\n              </el-input>\n            </el-col>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" style=\"width: 42%; background-color: #25c4b0\" @click=\"register()\">Registration\n            </el-button>\n          </el-form-item>\n        </div>\n\n        <p class=\"tips\">Have account?\n          <el-button type=\"info\" size=\"mini\" style=\"background-color: #25c4b0\" @click=\"goTo()\">Log in</el-button>\n        </p>\n      </el-form>\n    </section>\n\n    <div class=\"error\">{{ error }}</div>\n  </div>\n\n</template>\n\n<script>\n// import {getEmailCode, register} from '../api/register';\n\n\nexport default {\n  name: 'Register',\n  data() {\n    return {\n      statusMsg: '',\n      error: '',\n      isDisable: false,\n      codeLoading: false,\n      passwordType: 'password',\n      redirect: undefined,\n      ruleForm: {\n        email: '',\n        code: '',\n        password: '',\n      },\n      rules: {\n        email: [{\n          required: true,\n          type: 'email',\n          message: 'Input Email box',\n          trigger: 'blur'\n        }, {pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/, message: 'Please use XITLU campus email'}],\n        code: [{\n          required: true,\n          type: 'string',\n          message: 'Input verification code',\n          trigger: 'blur'\n        }, {pattern: /^\\d{6}$/, message: 'Must be a 6-digit integer'}],\n        password: [{\n          required: true,\n          message: 'Input password',\n          trigger: 'blur'\n        }, {pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/, message: 'Please contain both numbers and letters and be 6-16 characters in length'},]\n      }\n    }\n  },\n\n  methods: {\n    goTo() {\n      this.$router.push('/login');\n    },\n    sendMsg() {\n      const self = this\n      let email=''\n      email=this.ruleForm.email\n      let emailPass\n      let timerid\n      console.log(timerid)\n      if (timerid) {\n        return false\n      }\n      self.statusMsg = ''\n      this.$refs['ruleForm'].validateField('email', (valid) => {\n        emailPass = valid\n      })\n      // 向后端API验证码发送\n      if (!emailPass) {\n        self.codeLoading = true\n        self.statusMsg = '验证码发送中...'\n        //修改post的api接口路径\n        // this.$https.post('http://localhost:8080/api/getVerifyEmail',{email:self.ruleForm.email}).then(res=>{\n        // Json字符串形式请求\n        this.$https.post('/user/verify_email',{email:this.ruleForm.email}).then(res => {\n          if (res.status === 200) {\n            this.$message({\n              showClose: true,\n              message: 'Verification code sent successfully!',\n              type: 'success'\n            })\n            let count = 60\n            self.ruleForm.code = ''\n            self.codeLoading = false\n            self.isDisable = true\n            self.statusMsg = `验证码已发送,${count--}秒后重新发送`\n            //使用延迟函数，显示剩余秒数\n            timerid = window.setInterval(function () {\n              self.statusMsg = `验证码已发送,${count--}秒后重新发送`\n              if (count <= 0) {\n                console.log('clear' + timerid)\n                window.clearInterval(timerid)\n                self.isDisable = false\n                self.statusMsg = ''\n              }\n            }, 1000)\n          } else if(res.status === 409){\n            this.$message({\n              showClose: true,\n              message: 'Already registered, log in!',\n              type: 'error'\n            })\n          }\n        }).catch(err => {\n          this.isDisable = false\n          this.statusMsg = ''\n          this.codeLoading = false\n          console.log(err)\n        })\n      }\n    },\n\n\n    // 用户注册\n    register() {\n      let code = ''\n      code = this.ruleForm.code\n      const user = {\n        email: this.ruleForm.email,\n        // code: this.ruleForm.code,\n        password: this.ruleForm.password\n      }\n      this.$https.post(`/user/userRegister/${code}`, user).then(res => {\n        if (res.status === 200) {\n          this.$message({\n            showClose: true,\n            message: 'Registration succeeded, skipping to login page...',\n            type: 'success'\n          })\n          setTimeout(() => {\n            this.$router.push('/login')\n          }, 2000)\n        } else if(res.status === 400){\n          this.$message({\n            showClose: true,\n            message: 'Failed. Please try again.',\n            type: 'error'\n          })\n        }\n      })\n    }\n  }\n\n\n}\n</script>\n\n\n<style scoped>\n.register-container {\n  position: relative;\n  width: 100%;\n  height: 110vh;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(../assets/new.jpg);\n}\n\n.ms-register {\n  line-height: 30px;\n  text-align: center;\n  font-size: 25px;\n  color: #fff;\n  border-bottom: 1px solid #ddd;\n  border-radius: 6px;\n  padding: 5px 15px 15px 5px;\n}\n\n.ms-content {\n  background: rgba(255, 255, 255, 0.3);\n  padding: 10px 10px;\n  position: absolute;\n  left: 320px;\n  top: 150px;\n  width: 650px;\n  height: 400px;\n}\n\n.tips {\n  float: right;\n  font-size: 15px;\n  color: #fff;\n  margin-bottom: 10px;\n  position: relative;\n  left: -250px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}