{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import {login} from '../api/login';\nexport default {\n  data: function data() {\n    return {\n      loginForm: {\n        email: '',\n        password: ''\n      },\n      loginRules: {\n        email: [{\n          type: 'email',\n          required: true,\n          trigger: 'blur',\n          message: 'Input Email box'\n        }, {\n          pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/,\n          message: 'Please use XITLU campus email'\n        }],\n        password: [{\n          required: true,\n          message: 'Input password',\n          trigger: 'blur'\n        }, {\n          pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/,\n          message: 'Please contain both numbers and letters and be 6-16 characters in length'\n        }]\n      },\n      loading: false,\n      passwordType: 'password',\n      redirect: undefined\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    goTo: function goTo() {\n      this.$router.push('/register');\n    },\n    handleLogin: function handleLogin() {\n      var _this = this;\n\n      this.$https.post('/api/login', {\n        email: this.loginForm.email,\n        password: this.loginForm.password\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this.$message({\n            showClose: true,\n            message: 'Login succeeded, skipping to the home page...',\n            type: 'success'\n          });\n\n          setTimeout(function () {\n            _this.$router.push('/');\n          }, 2000);\n        } else if (res.status === 400) {\n          _this.$message({\n            showClose: true,\n            message: 'Incorrect password. Please try again',\n            type: 'error'\n          });\n        } else {\n          _this.$message({\n            showClose: true,\n            message: 'You are a new user.Go and register first',\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n}; // handleLogin() {\n//   this.$refs.loginForm.validate((valid) => {\n//     if (valid) {\n//       const loginFormData=this.loginForm;\n//       login(loginFormData)\n//         .then((res) => {\n//           if (res.msg) {\n//             this.loading = false;\n//             this.$router.push('/home');\n//           } else {\n//             this.$message.error(res.msg);\n//             this.loading = false;\n//           }\n//         })\n//         .catch((e) => {\n//           console.log(e);\n//           this.loading = false;\n//         });\n//     }\n//   });\n// }\n//   }\n// }","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AAEA;AAEAA,MAFA,kBAEA;AACA;AACAC;AACAC,iBADA;AAEAC;AAFA,OADA;AAKAC;AACAF;AAAAG;AAAAC;AAAAC;AAAAC;AAAA,WACA;AAAAC;AAAAD;AAAA,SADA,CADA;AAIAL;AACAG,wBADA;AAEAE,mCAFA;AAGAD;AAHA,WAIA;AAAAE;AAAAD;AAAA,SAJA;AAJA,OALA;AAeAE,oBAfA;AAgBAC,8BAhBA;AAiBAC;AAjBA;AAmBA,GAtBA;AAuBAC;AACAC;AACAC;AACA;AACA,OAHA;AAIAC;AAJA;AADA,GAvBA;AA+BAC;AACAC,QADA,kBACA;AACA;AACA,KAHA;AAKAC,eALA,yBAKA;AAAA;;AACA;AAAAjB;AAAAC;AAAA;AACA;AACA;AACAiB,2BADA;AAEAZ,oEAFA;AAGAH;AAHA;;AAKAgB;AACA;AACA,WAFA,EAEA,IAFA;AAGA,SATA,MASA;AACA;AACAD,2BADA;AAEAZ,2DAFA;AAGAH;AAHA;AAKA,SANA,MAMA;AACA;AACAe,2BADA;AAEAZ,+DAFA;AAGAH;AAHA;AAKA;AACA,OAvBA;AAwBA;AA9BA;AA/BA,E,CAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["data","loginForm","email","password","loginRules","type","required","trigger","message","pattern","loading","passwordType","redirect","watch","$route","handler","immediate","methods","goTo","handleLogin","showClose","setTimeout"],"sourceRoot":"src/views","sources":["login.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"login-container\">\r\n\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"ms-content\" auto-complete=\"on\"\r\n             label-width=\"0px\">\r\n      <div class=\"ms-login\">\r\n        <h3 class=\"ms-title\">LOG IN</h3></div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input ref=\"username\" v-model=\"loginForm.email\" placeholder=\"Email\" name=\"email\" type=\"text\"\r\n                  tabindex=\"1\" auto-complete=\"on\">\r\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-user-solid\"></i>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <el-input :key=\"passwordType\" ref=\"password\" v-model=\"loginForm.password\" :type=\"passwordType\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\" tabindex=\"2\" auto-complete=\"on\" @keyup.enter.native=\"handleLogin\" show-password>\r\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n\r\n      <router-link :to=\"{name:'/'}\"><el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;margin-bottom:30px;background-color: #25c4b0\"\r\n                 @click.native.prevent=\"handleLogin\">Log in\r\n      </el-button>\r\n      </router-link>\r\n\r\n      <p class=\"tips\">Have no account?\r\n        <el-button type=\"info\" size=\"mini\" style=\"background-color: #25c4b0\" @click=\"goTo()\">Register</el-button>\r\n      </p>\r\n    </el-form>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n// import {login} from '../api/login';\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        email: '',\r\n        password: '',\r\n      },\r\n      loginRules: {\r\n        email: [{type: 'email', required: true, trigger: 'blur', message: 'Input Email box'},\r\n          {pattern: /^[a-zA-Z0-9_.-]{2,30}@(student.xjtlu.edu.cn)$/, message: 'Please use XITLU campus email'}\r\n        ],\r\n        password: [{\r\n          required: true,\r\n          message: 'Input password',\r\n          trigger: 'blur'\r\n        }, {pattern: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,16}$/, message: 'Please contain both numbers and letters and be 6-16 characters in length'}]\r\n      },\r\n      loading: false,\r\n      passwordType: 'password',\r\n      redirect: undefined\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function (route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    goTo() {\r\n      this.$router.push('/register');\r\n    },\r\n\r\n    handleLogin() {\r\n      this.$https.post('/api/login', {email: this.loginForm.email, password: this.loginForm.password}).then(res => {\r\n        if (res.status === 200) {\r\n          this.$message({\r\n            showClose: true,\r\n            message: 'Login succeeded, skipping to the home page...',\r\n            type: 'success'\r\n          })\r\n          setTimeout(() => {\r\n            this.$router.push('/')\r\n          }, 2000)\r\n        } else if(res.status === 400){\r\n          this.$message({\r\n            showClose: true,\r\n            message: 'Incorrect password. Please try again',\r\n            type: 'error'\r\n          })\r\n        }else{\r\n          this.$message({\r\n            showClose: true,\r\n            message: 'You are a new user.Go and register first',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// handleLogin() {\r\n//   this.$refs.loginForm.validate((valid) => {\r\n//     if (valid) {\r\n//       const loginFormData=this.loginForm;\r\n//       login(loginFormData)\r\n//         .then((res) => {\r\n//           if (res.msg) {\r\n//             this.loading = false;\r\n//             this.$router.push('/home');\r\n//           } else {\r\n//             this.$message.error(res.msg);\r\n//             this.loading = false;\r\n//           }\r\n//         })\r\n//         .catch((e) => {\r\n//           console.log(e);\r\n//           this.loading = false;\r\n//         });\r\n//     }\r\n//   });\r\n// }\r\n//   }\r\n// }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.login-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 110vh;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-image: url(\"../assets/new.jpg\")\r\n}\r\n\r\n.ms-title {\r\n  line-height: 30px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  color: #fff;\r\n  border-bottom: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 5px 25px 25px 5px;\r\n}\r\n\r\n.ms-title .el-input input {\r\n  height: 38px;\r\n}\r\n\r\n\r\n.ms-content {\r\n  padding: 30px 30px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  width: 300px;\r\n  height: 350px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  left: 450px;\r\n  top: 160px;\r\n}\r\n\r\n.login-btn button {\r\n  width: 100%;\r\n  height: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.tips {\r\n  float: right;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n<!--<style>-->\r\n<!--.ms-login .el-input__inner {-->\r\n<!--  height: 40px !important;-->\r\n<!--}-->\r\n<!--</style>-->\r\n"]},"metadata":{},"sourceType":"module"}